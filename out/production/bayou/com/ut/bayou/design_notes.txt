REQUIREMENTS
------------------------
------------------------

Commands to be implemented
--------------------------
1. pause
2. continue
3. printLog prints logs for all nodes
4. printLog(i)
5. isolate(i) node i partitioned from other nodes
6. reconnect(i) Node is connected to all nodes. It is used when we try to recover the connections after we call partition(i)
7. breakConnection(i,j) Break the connection between Node i and Node j
8. recoverConnection(i,j) Recover the connection between Node i and Node j
9. join(i) Node i joins the system
10.leave(i) Node i leaves(retires from) the system.




Entities
--------
Server -> equivalent to replica
Client

Multiple clients can connect to a server.
Server can connect to a server.

Server thread for each connection at each server.
Each Server itself is a thread.

Client sends request to a server..a new server thread is launched. Client can now communicate to the server through this thread.

Only one playlist maintained at each server. need to synchronize properly in case of multiple clients.


NEW SERVER JOIN:

A new server first sends a write to one of the server(0: primary in our case). It performs an anti-antropy with the server once.

TODO
Retirement
handle